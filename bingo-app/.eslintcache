[{"/Users/aldo/Downloads/React/bingo/bingo-app/src/index.js":"1","/Users/aldo/Downloads/React/bingo/bingo-app/src/ContextAPI/DataLayer.js":"2","/Users/aldo/Downloads/React/bingo/bingo-app/src/ContextAPI/reducer.js":"3","/Users/aldo/Downloads/React/bingo/bingo-app/src/App.js":"4","/Users/aldo/Downloads/React/bingo/bingo-app/src/reportWebVitals.js":"5","/Users/aldo/Downloads/React/bingo/bingo-app/src/components/Game/Game.js":"6","/Users/aldo/Downloads/React/bingo/bingo-app/src/components/Table/Table.js":"7","/Users/aldo/Downloads/React/bingo/bingo-app/src/utils.js":"8","/Users/aldo/Downloads/React/bingo/bingo-app/src/components/TableCell/TableCell.js":"9"},{"size":701,"mtime":1612189765982,"results":"10","hashOfConfig":"11"},{"size":380,"mtime":1612189765975,"results":"12","hashOfConfig":"11"},{"size":331,"mtime":1612189765976,"results":"13","hashOfConfig":"11"},{"size":285,"mtime":1612189765975,"results":"14","hashOfConfig":"11"},{"size":362,"mtime":1612189765982,"results":"15","hashOfConfig":"11"},{"size":1110,"mtime":1612189765977,"results":"16","hashOfConfig":"11"},{"size":814,"mtime":1612189765979,"results":"17","hashOfConfig":"11"},{"size":1885,"mtime":1612189765983,"results":"18","hashOfConfig":"11"},{"size":1751,"mtime":1612189765980,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1f1f0q3",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"/Users/aldo/Downloads/React/bingo/bingo-app/src/index.js",[],["43","44"],"/Users/aldo/Downloads/React/bingo/bingo-app/src/ContextAPI/DataLayer.js",[],"/Users/aldo/Downloads/React/bingo/bingo-app/src/ContextAPI/reducer.js",[],"/Users/aldo/Downloads/React/bingo/bingo-app/src/App.js",[],"/Users/aldo/Downloads/React/bingo/bingo-app/src/reportWebVitals.js",[],"/Users/aldo/Downloads/React/bingo/bingo-app/src/components/Game/Game.js",["45"],"import React, { useEffect, useState } from \"react\";\nimport \"./Game.css\";\nimport Table from \"../Table/Table\";\nimport { useDataLayerValue } from \"../../ContextAPI/DataLayer\";\n\nfunction Game() {\n  const [{ wins }, dispatch] = useDataLayerValue();\n  const [selecteNumbers, setSelectedNumbers] = useState([\n    null,\n    null,\n    null,\n    null,\n    null,\n  ]);\n\n  useEffect(() => {\n    if (wins.length) {\n      setSelectedNumbers(wins[wins.length - 1]);\n    }\n  }, [wins]);\n\n  return (\n    <div className=\"game\">\n      <div className=\"game__selectedNumbers_container\">\n        <p>\n          Your Last <br /> <span>5 Winning</span> <br /> Numbers\n        </p>\n\n        <div className=\"game__numbers\">\n          {selecteNumbers?.map((number, index) => (\n            <div\n              key={index}\n              className={`game__selectedNumbers ${\n                number !== null && \"game__selectedNumbers_full\"\n              }`}\n            >\n              {number && number}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Table */}\n      <Table />\n    </div>\n  );\n}\n\nexport default Game;\n","/Users/aldo/Downloads/React/bingo/bingo-app/src/components/Table/Table.js",["46"],"import React, { useState, useEffect } from \"react\";\nimport \"./Table.css\";\nimport { tableData, chunkArray } from \"../../utils\";\nimport TableCell from \"../TableCell/TableCell\";\n\nfunction Table() {\n  const [cellValue, setCellValue] = useState(Array(25).fill(null));\n  const [chunkedArray, setChunkedArray] = useState([]);\n\n  useEffect(() => {\n    setChunkedArray(chunkArray(tableData));\n  }, []);\n\n  return (\n    <div className=\"table\">\n      {chunkedArray?.map((dataChunked, index) => (\n        <div key={index} className=\"table__row\">\n          {dataChunked?.map((data) => (\n            <TableCell\n              key={data.id}\n              cellValue={cellValue}\n              id={data.id}\n              data={data.text}\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Table;\n","/Users/aldo/Downloads/React/bingo/bingo-app/src/utils.js",["47"],"import React from \"react\";\n\nexport const tableData = [\n  {\n    id: 0,\n    text: \"(child noises in the background)\",\n  },\n  {\n    id: 1,\n    text: \"Hello, hello?\",\n  },\n  {\n    id: 2,\n    text: \"i need to jump in another call\",\n  },\n  {\n    id: 3,\n    text: \"can everyone go on mute\",\n  },\n  {\n    id: 4,\n    text: \"could you please get closer to the mic\",\n  },\n  {\n    id: 5,\n    text: \"(load painful echo / feedback)\",\n  },\n  {\n    id: 6,\n    text: \"Next slide, please\",\n  },\n  {\n    id: 7,\n    text: \"can we take this offline?\",\n  },\n  {\n    id: 8,\n    text: \"is on the call\",\n  },\n  {\n    id: 9,\n    text: \"Could you share this slides afterwards?\",\n  },\n  {\n    id: 10,\n    text: \"can somebody grant presenter rights?\",\n  },\n  {\n    id: 11,\n    text: \"sorry, i was on mute\",\n  },\n  {\n    id: 12,\n    text: \"CONF ðŸ˜·   CALL BINGO\",\n  },\n  {\n    id: 13,\n    text: \"can you email that to everyone?\",\n  },\n  {\n    id: 14,\n    text: \"sorry, i had problems loging in\",\n  },\n  {\n    id: 15,\n    text: \"(animal noises in the background)\",\n  },\n  {\n    id: 16,\n    text: \"sorry, i didn't found the conference id\",\n  },\n  {\n    id: 17,\n    text: \"i was heaving issues\",\n  },\n  {\n    id: 18,\n    text: \"i'll have to get back to you\",\n  },\n  {\n    id: 19,\n    text: \"who just joined?\",\n  },\n  {\n    id: 20,\n    text: \"sorry, something with my calendar\",\n  },\n  {\n    id: 21,\n    text: \"do you see my screen?\",\n  },\n  {\n    id: 22,\n    text: \"let's wait for ....\",\n  },\n  {\n    id: 23,\n    text: \"You will send the minutes?\",\n  },\n  {\n    id: 24,\n    text: \"can you repeat please?\",\n  },\n];\n\nexport const chunkArray = (array) => {\n  let i,\n    j,\n    temparray,\n    chunk = 5;\n  const chunkedArray = [];\n\n  for (i = 0, j = array.length; i < j; i += chunk) {\n    temparray = array.slice(i, i + chunk);\n    console.log(temparray);\n    chunkedArray.push(temparray);\n  }\n\n  return chunkedArray;\n};\n","/Users/aldo/Downloads/React/bingo/bingo-app/src/components/TableCell/TableCell.js",["48","49","50","51","52","53"],"import React, { useState, useEffect } from \"react\";\nimport \"./TableCell.css\";\nimport { useDataLayerValue } from \"../../ContextAPI/DataLayer\";\n\nfunction TableCell({ id, data, cellValue }) {\n  const [{ wins }, dispatch] = useDataLayerValue();\n  const [lines, setLines] = useState([\n    [0, 1, 2, 3, 4],\n    [5, 6, 7, 8, 9],\n    [10, 11, 12, 13, 14],\n    [15, 16, 17, 18, 19],\n    [20, 21, 22, 23, 24],\n    [0, 5, 10, 15, 20],\n    [1, 6, 11, 16, 21],\n    [2, 7, 12, 17, 22],\n    [3, 8, 13, 18, 23],\n    [4, 9, 14, 19, 24],\n    [0, 6, 12, 18, 24],\n    [4, 8, 12, 16, 20],\n  ]);\n\n  const [clicked, setClicked] = useState(false);\n  const [win, setWin] = useState([]);\n\n  const calculateWinner = (cellValue, lines) => {\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c, d, e] = lines[i];\n\n      if (\n        cellValue[a] &&\n        cellValue[a] === cellValue[b] &&\n        cellValue[a] === cellValue[c] &&\n        cellValue[a] === cellValue[d] &&\n        cellValue[a] === cellValue[e]\n      ) {\n        win.push(lines[i]);\n        dispatch({ type: \"UPDATE_WINS\", wins: win });\n        lines.splice(i, 1);\n\n        setLines(lines);\n\n        return cellValue[a];\n      }\n    }\n    return null;\n  };\n\n  useEffect(() => {\n    cellValue[12] = \"B\";\n  }, []);\n\n  useEffect(() => {\n    calculateWinner(cellValue, lines);\n  }, [calculateWinner(cellValue, lines)]);\n\n  const handleClick = (i) => {\n    setClicked(!clicked);\n    cellValue[id] === \"B\" ? (cellValue[id] = null) : (cellValue[id] = \"B\");\n  };\n\n  return (\n    <div\n      className={`tableCell ${id == 12 && \"tableCell__bingo\"} ${\n        clicked && \"tableCell__clicked\"\n      }`}\n      onClick={handleClick}\n    >\n      <span>{id}</span> {data}\n    </div>\n  );\n}\n\nexport default TableCell;\n",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":7,"column":20,"nodeType":"60","messageId":"61","endLine":7,"endColumn":28},{"ruleId":"58","severity":1,"message":"62","line":7,"column":21,"nodeType":"60","messageId":"61","endLine":7,"endColumn":33},{"ruleId":"58","severity":1,"message":"63","line":1,"column":8,"nodeType":"60","messageId":"61","endLine":1,"endColumn":13},{"ruleId":"58","severity":1,"message":"64","line":6,"column":12,"nodeType":"60","messageId":"61","endLine":6,"endColumn":16},{"ruleId":"58","severity":1,"message":"65","line":23,"column":15,"nodeType":"60","messageId":"61","endLine":23,"endColumn":21},{"ruleId":"66","severity":1,"message":"67","line":50,"column":6,"nodeType":"68","endLine":50,"endColumn":8,"suggestions":"69"},{"ruleId":"66","severity":1,"message":"70","line":54,"column":6,"nodeType":"68","endLine":54,"endColumn":41,"suggestions":"71"},{"ruleId":"66","severity":1,"message":"72","line":54,"column":7,"nodeType":"73","endLine":54,"endColumn":40},{"ruleId":"74","severity":1,"message":"75","line":63,"column":34,"nodeType":"76","messageId":"77","endLine":63,"endColumn":36},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'setCellValue' is assigned a value but never used.","'React' is defined but never used.","'wins' is assigned a value but never used.","'setWin' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cellValue'. Either include it or remove the dependency array.","ArrayExpression",["80"],"React Hook useEffect has missing dependencies: 'calculateWinner', 'cellValue', and 'lines'. Either include them or remove the dependency array.",["81"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},"Update the dependencies array to be: [cellValue]",{"range":"86","text":"87"},"Update the dependencies array to be: [calculateWinner, cellValue, lines]",{"range":"88","text":"89"},[1258,1260],"[cellValue]",[1328,1363],"[calculateWinner, cellValue, lines]"]